tape { & 0 0 0 0 0 0 1 0 & }

let Bits { 0 1 }

case Entry & & -> I

-- advance 3 cells accumulating state and then back one
for a     in Bits case I a a       -> (R a)
for a b   in Bits case (R a) b b   -> (R a b)
for a b c in Bits case (R a b) c c <- (W a b c)

-- RESET and print (TODO)
for a in Bits case (R b b) a & ! StartReset
case StartRest & & <- Reset
for a in Bits case Reset a a <- Reset
case Reset & & . Start

-- Modify middle cell depending on state 
case (W 0 0 0) 0 0 -> (R 0)
case (W 0 0 1) 0 1 -> (R 1)
case (W 0 1 0) 1 1 -> (R 0)
case (W 0 1 1) 1 1 -> (R 1)
case (W 1 0 0) 0 0 -> (R 0)
case (W 1 0 1) 0 1 -> (R 1)
case (W 1 1 0) 1 1 -> (R 0)
case (W 1 1 1) 1 0 -> (R 1)
